from django.contrib.auth.models import User
from qwe.models import *
from django.db.models import Max


#1. Создать двух пользователей (с помощью метода User.objects.create_user('username')).
User.objects.create_user('Qwe')
User.objects.create_user('Asd')
#User(username='Asd').save() создается User с пустым полем password.?

#2. Создать два объекта модели Author, связанные с пользователями.
Author.objects.create(author=User.objects.get(username='Qwe'))
Author(author=User.objects.get(username='Asd')).save()

#3. Добавить 4 категории в модель Category.
Category(category='Спорт').save()
Category(category='Экономика').save()
Category(category='Музыка').save()
Category(category='Игры').save()

#4. Добавить 2 статьи и 1 новость.
Post(postAuthor=Author.objects.get(pk=1), title='evrvrbv Wref', text='keuivreuioqjwoi ijver  f wef fwe fiw ejsd').save() 
Post(postAuthor=Author.objects.all()[0], title='UIO', text='HUihvre we hui nfi jweiorjoi').save()
Post(postAuthor=Author.objects.all()[1], postType=Post.NEWS, title='Evvfw fewf', text='uivhiureniu freuiiurev re  re erwp w').save()

#5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
Post.objects.all().first().category.add(Category.objects.get(category='Спорт'))
Post.objects.all().first().category.add(Category.objects.get(category='Игры'))
Post.objects.all().first().category.add(Category.objects.get(category='Экономика'))
Post.objects.all()[1].category.add(Category.objects.get(category='Экономика'))
Post.objects.all()[1].category.add(Category.objects.get(category='Музыка'))
Post.objects.get(pk=3).category.add(Category.objects.get(category='Игры'))

#6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Comment(post=Post.objects.get(pk=1), user=User.objects.get(username='Qwe'), text='vWevre ee w ds gtw').save() 
Comment(post=Post.objects.get(pk=1), user=User.objects.get(username='Asd'), text='Uiov fe ioe teie df h').save() 
Comment(post=Post.objects.get(pk=2), user=User.objects.get(username='Asd'), text='!').save()
Comment(post=Post.objects.get(pk=2), user=User.objects.get(username='Qwe'), text='$%#@').save() 
Comment(post=Post.objects.get(pk=2), user=User.objects.get(username='Asd'), text='^^').save() 
Comment(post=Post.objects.get(pk=3), user=User.objects.get(username='Asd'), text='?').save() 

#7.Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).dislike()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).dislike()
Post.objects.get(pk=1).dislike()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).dislike()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=2).dislike()
Post.objects.get(pk=2).dislike()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).dislike()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).dislike()
Post.objects.get(pk=2).dislike()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).dislike()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=2).like()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).like()
Post.objects.get(pk=3).like()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).like()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).like()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).dislike()
Post.objects.get(pk=3).like()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=2).like()
Comment.objects.get(pk=2).dislike()
Comment.objects.get(pk=2).like()
Comment.objects.get(pk=2).like()
Comment.objects.get(pk=4).dislike()
Comment.objects.get(pk=4).dislike()
Comment.objects.get(pk=4).like()
Comment.objects.get(pk=5).like()
Comment.objects.get(pk=5).like()
Comment.objects.get(pk=5).dislike()
Comment.objects.get(pk=5).like()


#8. Обновить рейтинги пользователей.
Author.objects.get(author_id=User.objects.get(username='Qwe')).update_rating() 
Author.objects.get(author_id=User.objects.get(username='Asd')).update_rating()

#9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
User.objects.get(pk=Author.objects.get(rating=Author.objects.aggregate(Max('rating')).get('rating__max')).author_id).username
Author.objects.get(rating=Author.objects.aggregate(Max('rating')).get('rating__max')).rating

#10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
Post.objects.get(rating=Post.objects.aggregate(Max('rating')).get('rating__max')).date
User.objects.get(pk=Author.objects.get(pk=Post.objects.get(rating=Post.objects.aggregate(Max('rating')).get('rating__max')).postAuthor_id).author_id).username
Post.objects.get(rating=Post.objects.aggregate(Max('rating')).get('rating__max')).rating
Post.objects.get(rating=Post.objects.aggregate(Max('rating')).get('rating__max')).title
Post.objects.get(rating=Post.objects.aggregate(Max('rating')).get('rating__max')).preview()

#11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
for i in Comment.objects.filter(post_id=Post.objects.get(rating=Post.objects.aggregate(Max('rating')).get('rating__max')).id): 
     i.time 
     i.user 
     i.text 
     i.rating


